{"version":3,"file":"spartan-ng-ui-core.mjs","sources":["../../../../../libs/ui/core/src/lib/brain/create-injection-token.ts","../../../../../libs/ui/core/src/lib/brain/custom-element-class-settable.ts","../../../../../libs/ui/core/src/lib/brain/exposes-side.ts","../../../../../libs/ui/core/src/lib/brain/exposes-state.ts","../../../../../libs/ui/core/src/lib/brain/rx-host-integration.ts","../../../../../libs/ui/core/src/lib/brain/table-classes-settable.ts","../../../../../libs/ui/core/src/lib/brain/zone-free.ts","../../../../../libs/ui/core/src/lib/helm/hlm.ts","../../../../../libs/ui/core/src/spartan-ng-ui-core.ts"],"sourcesContent":["import { InjectionToken, Type, forwardRef, inject, type InjectOptions, type Provider } from '@angular/core';\n\ntype InjectFn<TTokenValue> = {\n\t(): TTokenValue;\n\t(injectOptions: InjectOptions & { optional?: false }): TTokenValue;\n\t(injectOptions: InjectOptions & { optional: true }): TTokenValue | null;\n};\n\ntype ProvideFn<TTokenValue> = {\n\t(value: TTokenValue): Provider;\n};\n\ntype ProvideExistingFn<TTokenValue> = {\n\t(valueFactory: () => Type<TTokenValue>): Provider;\n};\n\nexport type CreateInjectionTokenReturn<TTokenValue> = [\n\tInjectFn<TTokenValue>,\n\tProvideFn<TTokenValue>,\n\tProvideExistingFn<TTokenValue>,\n\tInjectionToken<TTokenValue>,\n];\n\nexport function createInjectionToken<TTokenValue>(description: string): CreateInjectionTokenReturn<TTokenValue> {\n\tconst token = new InjectionToken<TTokenValue>(description);\n\n\tconst provideFn = (value: TTokenValue) => {\n\t\treturn { provide: token, useValue: value };\n\t};\n\n\tconst provideExistingFn = (value: () => TTokenValue) => {\n\t\treturn { provide: token, useExisting: forwardRef(value) };\n\t};\n\n\tconst injectFn = (options: InjectOptions = {}) => {\n\t\treturn inject(token, options);\n\t};\n\n\treturn [injectFn, provideFn, provideExistingFn, token] as CreateInjectionTokenReturn<TTokenValue>;\n}\n","import { createInjectionToken } from './create-injection-token';\n\nexport interface CustomElementClassSettable {\n\tsetClassToCustomElement: (newClass: string) => void;\n}\n\nexport const [\n\tinjectCustomClassSettable,\n\tprovideCustomClassSettable,\n\tprovideCustomClassSettableExisting,\n\tSET_CLASS_TO_CUSTOM_ELEMENT_TOKEN,\n] = createInjectionToken<CustomElementClassSettable>('@spartan-ng SET_CLASS_TO_CUSTOM_ELEMENT_TOKEN');\n","import type { Signal } from '@angular/core';\nimport { createInjectionToken } from './create-injection-token';\n\nexport interface ExposesSide {\n\tside: Signal<'top' | 'bottom' | 'left' | 'right'>;\n}\n\nexport const [\n\tinjectExposedSideProvider,\n\tprovideExposedSideProvider,\n\tprovideExposedSideProviderExisting,\n\tEXPOSES_SIDE_TOKEN,\n] = createInjectionToken<ExposesSide>('@spartan-ng EXPOSES_SIDE_TOKEN');\n","import { Signal } from '@angular/core';\nimport { createInjectionToken } from './create-injection-token';\n\nexport interface ExposesState {\n\tstate: Signal<'open' | 'closed'>;\n}\n\nexport const [\n\tinjectExposesStateProvider,\n\tprovideExposesStateProvider,\n\tprovideExposesStateProviderExisting,\n\tEXPOSES_STATE_TOKEN,\n] = createInjectionToken<ExposesState>('@spartan-ng EXPOSES_STATE_TOKEN');\n","import { ChangeDetectorRef, ElementRef, inject } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Observable, debounceTime, filter, fromEvent, merge, of, switchMap, tap } from 'rxjs';\n\nexport function rxHostListener<T extends Event>(event: string): Observable<T> {\n\tconst cdr = inject(ChangeDetectorRef);\n\n\t// Listen to event\n\treturn fromEvent<T>(inject(ElementRef).nativeElement, event).pipe(\n\t\tdebounceTime(0),\n\t\ttap(() => cdr.markForCheck()), // Trigger CD like @HostListener would\n\t\ttakeUntilDestroyed(), // Unsubscribe\n\t);\n}\n\nexport function rxHostBinding<T>(prop: string, stream: Observable<T>) {\n\t// Listen to the stream\n\tstream\n\t\t.pipe(takeUntilDestroyed()) // Unsubscribe\n\t\t.subscribe(process(inject(ElementRef).nativeElement, prop)); // Process\n}\n\nfunction process<T>(element: HTMLElement, prop: string): (value: T) => void {\n\tconst isAttr = prop.startsWith('attr.');\n\tconst isStyle = prop.startsWith('style.');\n\tconst isClass = prop.startsWith('class.');\n\tconst [key, unit = ''] = prop.replace('attr.', '').replace('style.', '').replace('class.', '').split('.');\n\n\treturn (value) => {\n\t\tconst parsed = unit && value != null ? `${value}${unit}` : value;\n\n\t\tif (isAttr) {\n\t\t\tif (value == null) {\n\t\t\t\telement.removeAttribute(key);\n\t\t\t} else {\n\t\t\t\telement.setAttribute(key, String(parsed));\n\t\t\t}\n\t\t} else if (isClass) {\n\t\t\telement.classList.toggle(key, !!value);\n\t\t} else if (isStyle) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\telement.style[key] = parsed;\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\telement[key] = parsed;\n\t\t}\n\t};\n}\n\nexport function rxHostPressedListener() {\n\treturn merge(\n\t\trxHostListener('click'),\n\t\trxHostListener<KeyboardEvent>('keyup').pipe(\n\t\t\tswitchMap((x) => {\n\t\t\t\treturn x.code === 'Space' || x.code === 'Enter' ? of(true) : of(null);\n\t\t\t}),\n\t\t\tfilter(Boolean),\n\t\t),\n\t).pipe(debounceTime(0));\n}\n","import { createInjectionToken } from './create-injection-token';\n\nexport interface TableClassesSettable {\n\tsetTableClasses: (classes: Partial<{ table: string; headerRow: string; bodyRow: string }>) => void;\n}\n\nexport const [\n\tinjectTableClassesSettable,\n\tprovideTableClassesSettable,\n\tprovideTableClassesSettableExisting,\n\tSET_TABLE_CLASSES_TOKEN,\n] = createInjectionToken<TableClassesSettable>('@spartan-ng SET_TABLE_CLASSES_TOKEN');\n","/**\n * We are building on shoulders of giants here and use the implementation provided by the incredible TaigaUI\n * team: https://github.com/taiga-family/taiga-ui/blob/main/projects/cdk/observables/zone-free.ts#L22\n * Check them out! Give them a try! Leave a star! Their work is incredible!\n */\nimport { NgZone } from '@angular/core';\nimport { MonoTypeOperatorFunction, Observable, pipe } from 'rxjs';\n\nexport function brnZoneFull<T>(zone: NgZone): MonoTypeOperatorFunction<T> {\n\treturn (source) =>\n\t\tnew Observable((subscriber) =>\n\t\t\tsource.subscribe({\n\t\t\t\tnext: (value) => zone.run(() => subscriber.next(value)),\n\t\t\t\terror: (error: unknown) => zone.run(() => subscriber.error(error)),\n\t\t\t\tcomplete: () => zone.run(() => subscriber.complete()),\n\t\t\t}),\n\t\t);\n}\n\nexport function brnZoneFree<T>(zone: NgZone): MonoTypeOperatorFunction<T> {\n\treturn (source) => new Observable((subscriber) => zone.runOutsideAngular(() => source.subscribe(subscriber)));\n}\n\nexport function brnZoneOptimized<T>(zone: NgZone): MonoTypeOperatorFunction<T> {\n\treturn pipe(brnZoneFree(zone), brnZoneFull(zone));\n}\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function hlm(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}